Contacts
==========
getting contacts in listview and click-->call /sms alert

MainActivity.java
-----------------
package com.example.contacts;

import java.util.ArrayList;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.ContentResolver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.provider.ContactsContract;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity {

	ListView lv;
	TextView tv;
	MySimpleArrayAdapter adapter;
	
	ArrayList<String> names=new ArrayList<String>();
	ArrayList<String> numbers=new ArrayList<String>();

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		tv = (TextView) findViewById(R.id.text);
		lv = (ListView) findViewById(R.id.list);

		ContentResolver cr = getContentResolver();
		Cursor c = cr.query(ContactsContract.Contacts.CONTENT_URI, null, null,
				null, null);
//		int n = c.getCount();
//		tv.append("\n no of contacts is;" + n);

		if (c.getCount() > 0) {
			while (c.moveToNext()) {
				String id = c.getString(c.getColumnIndex(ContactsContract.Contacts._ID));
				// tv.append("\n id"+id);
				String name = c.getString(c.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
//				tv.append("\n" + name);
				names.add(name);

				int num = Integer.parseInt(c.getString(c.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER)));
				if (num > 0) {
					Cursor pCur = cr.query(
							ContactsContract.CommonDataKinds.Phone.CONTENT_URI,
							null,
							ContactsContract.CommonDataKinds.Phone.CONTACT_ID
									+ " = ?", new String[] { id }, null);
					while (pCur.moveToNext()) {
						// Do something with phones
//						tv.append("--- "+ pCur.getString(pCur.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER)));
						numbers.add(pCur.getString(pCur.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER)));
					}
					pCur.close();

				}

			}
		}
		
//		tv.append("\n list");
//		tv.append(names.toString());
//		tv.append(numbers.toString());
		
		adapter = new MySimpleArrayAdapter(this, names,numbers);
		lv.setAdapter(adapter);
		
		lv.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,int position, long id) {
				// TODO Auto-generated method stub

				//Shows clicked item value with position
//				Toast.makeText(getApplicationContext(), position+1+" "+names.get(position) ,Toast.LENGTH_SHORT).show();
				
				AlertDialog.Builder alertDialog = new AlertDialog.Builder(MainActivity.this);
				 
		        alertDialog.setTitle("Contact Information");
		        alertDialog.setMessage("Perform Action");
		        
		        final String num=numbers.get(position).toString();
		 
		        // Setting Positive "Yes" Button
		        alertDialog.setPositiveButton("Call", new DialogInterface.OnClickListener() {
		            public void onClick(DialogInterface dialog,int which) {
		 
		            // Write your code here to invoke YES event
		            	 Intent callIntent = new Intent(Intent.ACTION_CALL);
		            	 String p="tel:"+num;
		            	    callIntent.setData(Uri.parse(p));
		            	    startActivity(callIntent);
		            }
		        });
		 
		        // Setting Negative "NO" Button
		        alertDialog.setNegativeButton("SMS", new DialogInterface.OnClickListener() {
		            public void onClick(DialogInterface dialog, int which) {
		            // Write your code here to invoke NO event
//		            Toast.makeText(getApplicationContext(), "Cancel", Toast.LENGTH_SHORT).show();
//		            dialog.cancel();
		            	
		            	startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("sms:"
		                        + num)));
		            }
		        });
		 
		        // Showing Alert Message
		        alertDialog.show();

			}
		});
		
		
	}
	public class MySimpleArrayAdapter extends BaseAdapter {

		private final Context context;
//		private final String[] values;
		private final ArrayList<String> names;
		private final ArrayList<String> numbers;
		LayoutInflater inflater;

		public MySimpleArrayAdapter(Context context, ArrayList<String> names,ArrayList<String> numbers) {
			this.context = context;
			this.names=names;
			this.numbers=numbers;
			// Cache the LayoutInflate to avoid asking for a new one each time.
			inflater = LayoutInflater.from(this.context);
		}

		@Override
		public int getCount() {
			// TODO Auto-generated method stub
			return names.size();
		}

		@Override
		public String getItem(int position) {
			// TODO Auto-generated method stub
			return names.get(position);
		}

		@Override
		public long getItemId(int position) {
			// TODO Auto-generated method stub
			return 0;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			MyViewHolder mViewHolder;

			// Create a new row view
			if (convertView == null) {

				// inflating row layout
				convertView = inflater.inflate(R.layout.row_layout, null);
				
				// Find the child views.
				mViewHolder = new MyViewHolder();
				
				mViewHolder.t1= (TextView) convertView.findViewById(R.id.text1);
				mViewHolder.t2= (TextView) convertView.findViewById(R.id.text2);
				
				
				// Optimization: Tag the row with it's child views, so we don't
				// have to
				// call findViewById() later when we reuse the row.
				convertView.setTag(mViewHolder);

			} // Reuse existing row view
			else {
				// Because we use a ViewHolder, we avoid having to call
				// findViewById().
				mViewHolder = (MyViewHolder) convertView.getTag();
			}
			// Find the child views.
			mViewHolder.t1.setText(names.get(position).toString());
			mViewHolder.t2.setText(numbers.get(position).toString());
//			if (position % 2 == 0) {
//				mViewHolder.ivIcon.setImageResource(android.R.drawable.btn_star_big_off);
//			} else {
//				mViewHolder.ivIcon.setImageResource(android.R.drawable.btn_star_big_on);
//			}

			return convertView;
		}

		private class MyViewHolder {
			// The child views in each row.
			TextView t1;
			TextView t2;
		}
	}
}

activity_main.xml
-----------------
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#3088f0"
    tools:context="${relativePackage}.${activityClass}" >

    <TextView
        android:id="@+id/text"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:background="#990000"
        android:paddingTop="7dp"
        android:paddingBottom="7dp"
        android:textColor="#ffffff"
        android:text="CONTACTS LIST" />

    <ListView
        android:id="@+id/list"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/text"
        android:background="#3088f0" >
    </ListView>

</RelativeLayout>

row_layout.xml
--------------
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="horizontal" 
    android:background="#3088f0"
    android:paddingTop="5dp"
    android:paddingBottom="5dp"
    android:weightSum="1">
    
	<TextView 
	    android:id="@+id/text1"
	    android:layout_width="fill_parent"
	    android:layout_height="fill_parent"
	    android:layout_weight="0.5"
	    android:textColor="#ffffff"
	    android:gravity="center_horizontal"
	    android:text="NAME"/>
	
	<TextView 
	    android:id="@+id/text2"
	    android:layout_width="fill_parent"
	    android:layout_height="fill_parent"
	    android:layout_weight="0.5"
	    android:textColor="#ffffff"
	    android:gravity="center_horizontal"
	    android:text="PHONE"/>
    
</LinearLayout>
