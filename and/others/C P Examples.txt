Example : Android application to get all contact informations with ID, Display name, Phone Number and Email Address
[to access Contacts application data]

1) Create a New Android Project

2) In activity_main.xml - place a Button , ScrollView and inside that a TextView 

3) Provide the permission for android.permission.READ_CONTACTS in AndroidManifest.xml

4) activity_main.xml

5) MainActivity.java
-----------------------------
import android.app.Activity;
import android.content.ContentResolver;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.provider.ContactsContract;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends Activity implements OnClickListener 
{
TextView tv;	
protected void onCreate(Bundle savedInstanceState) 
{
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
tv=(TextView)findViewById(R.id.textView1);
Button b=(Button)findViewById(R.id.button1);
b.setOnClickListener(this);
}


public void onClick(View arg0) 
{
tv.setText("");

ContentResolver resolver=getContentResolver();

Uri contact=ContactsContract.Contacts.CONTENT_URI;

Uri phone=ContactsContract.CommonDataKinds.Phone.CONTENT_URI;

Cursor c=resolver.query(contact, null,null,null,null);

while(c.moveToNext())
{
String id=c.getString(c.getColumnIndex(ContactsContract.Contacts._ID));

String name=c.getString(c.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));

int hasPhoneNo=c.getInt(c.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER));


tv.append(id+" : "+name+" : "+hasPhoneNo+"\n");

if(hasPhoneNo>0)
{
String phoneContactId=ContactsContract.CommonDataKinds.Phone.CONTACT_ID;

Cursor p=resolver.query(phone, null, phoneContactId+"="+id,null,null);

if(p.moveToNext())
{
String no=p.getString(p.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));
tv.append(no+"\n\n");
}
}
}
}
}

	OR

5) MainActivity.java
----------------------------
import android.app.Activity;
import android.content.ContentResolver;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.provider.ContactsContract;
import android.widget.TextView;

public class MainActivity extends Activity 
{
public TextView outputText;	
protected void onCreate(Bundle savedInstanceState)
{
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
outputText=(TextView)findViewById(R.id.textView1);

fetchContacts();
}

public void fetchContacts() 
{
String phoneNumber=null;
String email=null;

Uri CONTENT_URI=ContactsContract.Contacts.CONTENT_URI;
String _ID=ContactsContract.Contacts._ID;
String DISPLAY_NAME=ContactsContract.Contacts.DISPLAY_NAME;
String HAS_PHONE_NUMBER=ContactsContract.Contacts.HAS_PHONE_NUMBER;

Uri PhoneCONTENT_URI=ContactsContract.CommonDataKinds.Phone.CONTENT_URI;
String Phone_CONTACT_ID=ContactsContract.CommonDataKinds.Phone.CONTACT_ID;
String NUMBER = ContactsContract.CommonDataKinds.Phone.NUMBER;

Uri EmailCONTENT_URI=ContactsContract.CommonDataKinds.Email.CONTENT_URI;
String EmailCONTACT_ID=ContactsContract.CommonDataKinds.Email.CONTACT_ID;
String DATA=ContactsContract.CommonDataKinds.Email.DATA;

StringBuffer output=new StringBuffer();

ContentResolver contentResolver=getContentResolver();

Cursor cursor=contentResolver.query(CONTENT_URI, null,null, null, null);	

// Loop for every contact in the phone
if(cursor.getCount() > 0) 
{
while(cursor.moveToNext()) 
{
String contact_id=cursor.getString(cursor.getColumnIndex( _ID ));
String name = cursor.getString(cursor.getColumnIndex( DISPLAY_NAME ));
int hasPhoneNumber=Integer.parseInt(cursor.getString(cursor.getColumnIndex(HAS_PHONE_NUMBER)));

if(hasPhoneNumber > 0) 
{
output.append("\n ID: "+contact_id+"\n Name:" + name);

// Query and loop for every phone number of the contact
Cursor phoneCursor = contentResolver.query(PhoneCONTENT_URI, null,Phone_CONTACT_ID + " = ?", new String[] { contact_id }, null);

while (phoneCursor.moveToNext()) 
{
phoneNumber = phoneCursor.getString(phoneCursor.getColumnIndex(NUMBER));
output.append("\n Phone number:" + phoneNumber);
}

phoneCursor.close();

//Query and loop for every email of the contact
Cursor emailCursor = contentResolver.query(EmailCONTENT_URI,null,EmailCONTACT_ID+ " = ?", new String[] { contact_id }, null);

while (emailCursor.moveToNext()) 
{
email=emailCursor.getString(emailCursor.getColumnIndex(DATA));
output.append("\nEmail:" + email);
}

emailCursor.close();
output.append("\n");
}
}
}
outputText.setText(output);
}
}




************************************************

Access Call logs in Android
--------------------------------------

activity_main.xml

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:paddingBottom="@dimen/activity_vertical_margin"
android:paddingLeft="@dimen/activity_horizontal_margin"
android:paddingRight="@dimen/activity_horizontal_margin"
android:paddingTop="@dimen/activity_vertical_margin"
tools:context="com.example.calllog.MainActivity$PlaceholderFragment" >

<Button
android:id="@+id/button1"
style="?android:attr/buttonStyleSmall"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_alignParentLeft="true"
android:layout_alignParentTop="true"
android:text="Get Call Details" />

<ScrollView
android:id="@+id/scrollView1"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:layout_alignParentLeft="true"
android:layout_below="@+id/button1"
android:layout_marginTop="20dp" >

<LinearLayout
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical" >

<TextView
android:id="@+id/textView1"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:text="Large Text"
android:textAppearance="?android:attr/textAppearanceLarge" />
</LinearLayout>
</ScrollView>
</RelativeLayout>

MainActivity.java

public class MainActivity extends Activity implements OnClickListener
{
TextView tv;
Button b;
protected void onCreate(Bundle savedInstanceState) 
{
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
tv=(TextView)findViewById(R.id.textView1);
b=(Button)findViewById(R.id.button1);
b.setOnClickListener(this);
}

public void onClick(View arg0) 
{
String[] strFields={android.provider.CallLog.Calls.NUMBER,android.provider.CallLog.Calls.DURATION,android.provider.CallLog.Calls.DATE,android.provider.CallLog.Calls.TYPE};

Cursor cursor=getContentResolver().query(android.provider.CallLog.Calls.CONTENT_URI,null,null,null,null);

if(cursor!=null)
{
while(cursor.moveToNext())
{
String number=cursor.getString(cursor.getColumnIndex(Calls.NUMBER));
String duration=cursor.getString(cursor.getColumnIndex(Calls.DURATION));
String type=cursor.getString(cursor.getColumnIndex(Calls.TYPE));

String Type="";
int t=Integer.parseInt(type);
switch(t)
{
case CallLog.Calls.INCOMING_TYPE:
	Type="Incoming";
	break;
case CallLog.Calls.OUTGOING_TYPE:
	Type="Outgoing";
	break;		
case CallLog.Calls.MISSED_TYPE:
	Type="Missed";
	break;	
}
tv.append("\n"+number+" "+Type+" "+duration);
}
}
else
{
Toast.makeText(this,"could not fetch any records",1).show();	
}
}
}